CREATE DATABASE dbfirst;

CREATE USER dbfirstuser WITH PASSWORD 'dbfirstuser';

GRANT ALL PRIVILEGES ON DATABASE dbfirst TO dbfirstuser;
ALTER DATABASE dbfirst OWNER TO dbfirstuser;


\connect dbfirst

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO dbfirstuser;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO dbfirstuser;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO dbfirstuser;

ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT ALL PRIVILEGES ON TABLES TO dbfirstuser;

CREATE TABLE products (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_name VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE customers (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE orders (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    customer_id INT NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE CASCADE
);

CREATE TABLE order_items (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price_per_item DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE suppliers (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    supplier_name VARCHAR(100) NOT NULL,
    contact_name VARCHAR(100),
    phone VARCHAR(15),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE product_suppliers (
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    PRIMARY KEY (product_id, supplier_id),
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE CASCADE
);


-- Insert some products
INSERT INTO products (product_name, price, stock_quantity) VALUES
('Laptop', 1200.00, 10),
('Mouse', 25.00, 50),
('Keyboard', 45.00, 30);

-- Insert some customers
INSERT INTO customers (first_name, last_name, email, phone) VALUES
('John', 'Doe', 'john.doe@example.com', '555-1234'),
('Jane', 'Smith', 'jane.smith@example.com', '555-5678');

-- Insert some orders
INSERT INTO orders (customer_id, total_amount) VALUES
(1, 1225.00),
(2, 70.00);   

-- Insert order items
INSERT INTO order_items (order_id, product_id, quantity, price_per_item) VALUES
(1, 1, 1, 1200.00),
(1, 2, 1, 25.00),
(2, 3, 1, 45.00),
(2, 2, 1, 25.00);

-- Insert some suppliers
INSERT INTO suppliers (supplier_name, contact_name, phone) VALUES
('Tech Supplier Inc.', 'Alice Johnson', '555-9876'),
('Office Supplies Co.', 'Bob Lee', '555-6543');

-- Link products to suppliers
INSERT INTO product_suppliers (product_id, supplier_id) VALUES
(1, 1), 
(2, 2), 
(3, 2);
